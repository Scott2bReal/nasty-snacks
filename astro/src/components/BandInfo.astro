---
import { Image } from "astro:assets"
import type { BandMember, GroupPhoto } from "../types"
import { rosterSort } from "../utils/helpers"
import { sanityAPI, sanityImageUrl } from "../utils/sanity"

const groupPhotoResult = await sanityAPI("bandPhoto")
const groupPhoto = groupPhotoResult.result[0] as GroupPhoto

const rosterResult = await sanityAPI("bandMembers")
const roster = rosterResult.result as BandMember[]

const builder = sanityImageUrl(groupPhoto.image)
---

<div id="bandInfo" class="mx-auto w-fit">
  <h2
    id="bandInfoHeader"
    class="relative z-10 -translate-x-6 py-6 text-3xl tracking-widest opacity-0 transition duration-1000 ease-in-out"
  >
    WE ARE NASTY SNACKS
  </h2>
  <div
    class="z-10 flex max-w-[850px] translate-y-6 flex-col px-4 text-center opacity-0 transition duration-1000 ease-in-out md:flex-row md:justify-center"
    id="bandPic"
  >
    <Image
      src={builder.auto("format").url()}
      width={500}
      height={434}
      id="bandPic"
      alt={groupPhoto.alt}
      class="relative z-10"
    />
    <ul
      class="relative translate-x-6 px-4 text-left opacity-0 transition duration-1000 ease-in-out child:py-2 child:text-sm"
      id="roster"
    >
      {
        roster.sort(rosterSort).map((member) => {
          return (
            <li>
              <em>
                {member.instrument} / {member.name}
              </em>
            </li>
          )
        })
      }
    </ul>
  </div>
</div>
<script>
  const animateOnScroll = () => {
    const bandPic = document.getElementById("bandPic")
    const header = document.getElementById("bandInfoHeader")
    const roster = document.getElementById("roster")
    const bandInfo = document.getElementById("bandInfo")
    if (!bandPic || !header || !roster || !bandInfo) return

    const showInfo = () => {
      const showHeader = () => {
        header.classList.add("opacity-100")
        header.classList.remove("-translate-x-6")
      }

      const showBandPic = () => {
        bandPic.classList.add("opacity-100")
        bandPic.classList.remove("translate-y-6")
      }

      const showRoster = () => {
        roster.classList.add("opacity-100")
        roster.classList.remove("translate-x-6")
      }

      showHeader()
      showBandPic()
      showRoster()
    }

    const hideInfo = () => {
      const hideHeader = () => {
        header.classList.remove("opacity-100")
        header.classList.add("-translate-x-6")
        header.classList.remove("-z-10")
      }

      const hideBandPic = () => {
        bandPic.classList.remove("opacity-100")
        bandPic.classList.add("translate-y-6")
      }

      const hideRoster = () => {
        roster.classList.remove("opacity-100")
        roster.classList.add("translate-x-6")
      }

      hideHeader()
      hideBandPic()
      hideRoster()
    }

    const options = {
      threshold: 0.1,
      rootMargin: "-50px",
    }

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          showInfo()
        } else {
          hideInfo()
        }
      })
    }, options)

    observer.observe(bandInfo)
  }

  animateOnScroll()
  document.addEventListener("astro:page-load", animateOnScroll)
</script>
