---
import type { BandMember, GroupPhoto } from "../types";
import { rosterSort } from "../utils/helpers";
import { sanityAPI, sanityImageUrl } from "../utils/sanity";

const groupPhotoResult = await sanityAPI('bandPhoto')
const groupPhoto = groupPhotoResult.result[0] as GroupPhoto

const rosterResult = await sanityAPI("bandMembers");
const roster = rosterResult.result as BandMember[];

const builder = sanityImageUrl(groupPhoto.image)
---

<div id="bandInfo">
  <h2
    id="bandInfoHeader"
    class="tracking-widest text-3xl py-6 opacity-0 transition duration-700 ease-in relative -translate-x-6 z-10"
  >
    WE ARE NASTY SNACKS
  </h2>
  <div
    class="flex md:flex-row flex-col max-w[850px] text-center md:justify-center px-4 opacity-0 transition duration-700 ease-in translate-y-6 z-10"
    id="bandPic"
  >
    <img
      src={builder.auto('format').url()}
      width="500px"
      height="434px"
      id="bandPic"
      alt={groupPhoto.alt}
      class="relative z-10"
    />
    <ul
      class="text-left px-4 child:py-2 child:text-sm opacity-0 transition duration-700 ease-in relative translate-x-6 "
      id="roster"
    >
      {
        roster.sort(rosterSort).map((member) => {
          return (
            <li>
              <em>
                {member.instrument} / {member.name}
              </em>
            </li>
          );
        })
      }
    </ul>
  </div>
</div>
<script>
  const bandPic = document.getElementById("bandPic");
  const header = document.getElementById("bandInfoHeader");
  const roster = document.getElementById("roster");
  const bandInfo = document.getElementById("bandInfo");

  const animateOnScroll = () => {
    if (!bandPic || !header || !roster || !bandInfo) return;

    const showInfo = () => {
      const showHeader = (header: HTMLElement) => {
        header.classList.add("opacity-100");
        header.classList.remove("-translate-x-6");
      };

      const showBandPic = (bandPic: HTMLElement) => {
        bandPic.classList.add("opacity-100");
        bandPic.classList.remove("translate-y-6");
      };

      const showRoster = (roster: HTMLElement) => {
        roster.classList.add("opacity-100");
        roster.classList.remove("translate-x-6");
      };

      showHeader(header);
      showBandPic(bandPic);
      showRoster(roster);
    };

    const hideInfo = () => {
      const hideHeader = (header: HTMLElement) => {
        header.classList.remove("opacity-100");
        header.classList.add("-translate-x-6");
        header.classList.remove("-z-10");
      };

      const hideBandPic = (bandPic: HTMLElement) => {
        bandPic.classList.remove("opacity-100");
        bandPic.classList.add("translate-y-6");
      };

      const hideRoster = (roster: HTMLElement) => {
        roster.classList.remove("opacity-100");
        roster.classList.add("translate-x-6");
      };

      hideHeader(header);
      hideBandPic(bandPic);
      hideRoster(roster);
    };

    const options = {
      threshold: 0.1,
      rootMargin: '-50px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          showInfo();
        } else {
          hideInfo();
        }
      });
    }, options);

    observer.observe(bandInfo);
  };

  animateOnScroll();

  // fadeIn();
</script>
