---
import type { Show } from "../types";
import dayjs from 'dayjs'
import customParseFormat from 'dayjs/plugin/customParseFormat'

dayjs.extend(customParseFormat)

const PROJECT_ID = import.meta.env.SANITY_PROJECT_ID;
const DATASET = "production";
if (typeof PROJECT_ID !== "string" || typeof DATASET !== "string") return;
const QUERY = encodeURIComponent('*[_type == "show"]');

const URL = `https://${PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${DATASET}?query=${QUERY}`;

const result = await fetch(URL)
  .then((res) => res.json())
  .catch((e) => console.error(e));

const shows = result.result as Show[];
---

<h3 class="tracking-wider text-3xl pb-6">Upcoming Shows</h3>
<ul
  class="mx-auto tracking-wider w-fit flex flex-col gap-2 text-left pl-2 opacity-0 transition duration-500 ease-in"
  id="showList"
>
  {
    shows.map((show) => {
      return (
        <li>
          <em>
            <strong>{show.venueName.toUpperCase()}</strong>{" "}
            {show.subtitle?.toUpperCase() ?? ""}{" "}
            {show.description ? `// ${show.description.toUpperCase()}` : ""}
            {show.date ? dayjs(show.date, 'MMMM-D') : ""}
          </em>
        </li>
      );
    })
  }
</ul>
<script>
  function fadeInShows() {
    const isAtBottom = () => {
      return window.innerHeight + window.scrollY >= document.body.offsetHeight;
    };

    const handleScroll = (shows: HTMLElement) => {
      const rect = shows.getBoundingClientRect();
      const top = Number(rect.top);

      if (window.scrollY > top || isAtBottom()) {
        shows.classList.add("opacity-100");
        shows.classList.remove("-translate-x-6");
      } else {
        shows.classList.remove("opacity-100");
        shows.classList.add("-translate-x-6");
      }
    };

    const shows = document.getElementById("showList");
    if (!shows) return;

    handleScroll(shows);
    document.addEventListener("scroll", () => handleScroll(shows));
  }

  fadeInShows();
</script>
