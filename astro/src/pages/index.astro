---
import Layout from '../layouts/Layout.astro'
import UpcomingShows from '../components/UpcomingShows.astro'
import BandInfo from '../components/BandInfo.astro'
import { RandomSnacksVid } from '../components/RandomSnacksVid'
import { sanityAPI, sanityImageUrl } from '../utils/sanity'
import type { SnacksVid, BannerImage } from '../types'
import Music from '../components/Music.astro'

const bannerResult = await sanityAPI('banner')
const banners = bannerResult.result
const banner = banners[0] as BannerImage

const vidResult = await sanityAPI('videos')
const snacksVids = vidResult.result as SnacksVid[]

const builder = sanityImageUrl(banner.image)
---

<Layout title='Nasty Snacks'>
  <main class='relative flex flex-col'>
    <div class='fixed top-0 -z-10 overflow-hidden opacity-60 md:h-[100vh]'>
      <img
        alt={banner.alt}
        src={builder.auto('format').url()}
        height='1000px'
        width='1500px'
      />
    </div>

    <!-- Scroll Prompt -->
    <span
      id='scrollPrompt'
      class={`fixed hidden left-[50%] right-[50%] bottom-12 opacity-0 transition duration-700 ease-in-out translate-y-6`}
    >
      <svg
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 24 24'
        stroke-width='1.5'
        stroke='currentColor'
        class='scrollPrompt h-8 w-8'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M19.5 5.25l-7.5 7.5-7.5-7.5m15 6l-7.5 7.5-7.5-7.5'></path>
      </svg>
    </span>

    <div class='h-[40vh] md:h-[100vh]'></div>
    <div class='bg-neutral-900'>
      <!-- Upcoming Shows -->
      <section id='shows' class='scroll-m-48 pt-16'>
        <UpcomingShows />
      </section>

      <!-- Music -->
      <section
        id='music'
        class='mt-20 opacity-0 transition duration-1000 ease-in-out'
      >
        <h2 class='p-4 text-3xl'>MUSIC</h2>
        <Music />
      </section>

      <!-- Video -->
      <section
        id='video'
        class='opacity-0 transition duration-1000 ease-in-out'
      >
        <h2 class='p-4 text-3xl'>VIDEO</h2>
        <RandomSnacksVid snacksVids={snacksVids} client:idle />
      </section>

      <!-- Band info -->
      <section id='band'>
        <BandInfo />
      </section>
    </div>

    <!-- Go to top -->
    <button
      aria-label='scroll to top of page'
      id='toTop'
      class='fixed bottom-6 right-6 z-20 p-2 opacity-0 transition duration-700 ease-in-out'
    >
      <svg
        xmlns='http://www.w3.org/2000/svg'
        viewBox='0 0 24 24'
        fill='currentColor'
        class='z-20 h-12 w-12'
      >
        <path
          fill-rule='evenodd'
          d='M11.47 7.72a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 9.31l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5z'
          clip-rule='evenodd'></path>
      </svg>
    </button>
  </main>
</Layout>
<script>
  const prompt = document.getElementById('scrollPrompt')
  const toTopArrow = document.getElementById('toTop')

  const fadeInScrollPrompt = () => {
    if (!prompt) return
    setTimeout(() => {
      if (window.scrollY === 0) {
        prompt.classList.remove('hidden')
        setTimeout(() => {
          prompt.classList.add('opacity-100')
          prompt.classList.remove('translate-y-6')
          prompt.classList.remove('-z-60')
        }, 500)
      }
    }, 2000)
  }

  const hideScrollPrompt = () => {
    if (!prompt) return
    prompt.classList.remove('opacity-100')
    prompt.classList.add('-z-60')
    setTimeout(() => {
      prompt.classList.add('translate-y-6')
      prompt.classList.add('hidden')
    }, 500)
  }

  const swapScrollPrompts = () => {
    if (!prompt || !toTopArrow) return
    window.addEventListener('scroll', () => {
      if (window.scrollY < 10) {
        toTopArrow.classList.add('opacity-0')
        fadeInScrollPrompt()
      } else {
        toTopArrow.classList.remove('opacity-0')
        prompt.classList.add('opacity-0')
        hideScrollPrompt()
      }
    })
  }

  const showVideo = () => {
    const video = document.getElementById('video')
    const options = {
      threshold: 0.2,
      rootMargin: '-50px',
    }
    if (!video) return
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('opacity-100')
        } else {
          entry.target.classList.remove('opacity-100')
        }
      })
    }, options)
    observer.observe(video)
  }

  const toTop = () => {
    if (!toTopArrow) return
    if (document.body.scrollTop === 0) {
      toTopArrow.classList.add('opacity-0')
    }
    toTopArrow.addEventListener(
      'click',
      () => {
        window.scrollTo(0, 0)
      },
      { passive: true }
    )
  }
  fadeInScrollPrompt()
  swapScrollPrompts()
  toTop()
  showVideo()
</script>
